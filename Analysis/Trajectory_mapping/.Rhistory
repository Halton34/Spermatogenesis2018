# MNN correct
corrected <- mnnCorrect(log(as.matrix(C1.all[genes,] + 1)),
log(as.matrix(Tc0_young[genes,] + 1)),
log(as.matrix(Tc1_young[genes,] + 1)),
log(as.matrix(Tc0_old[genes,] + 1)),
log(as.matrix(Tc1_old[genes,] + 1)),
cos.norm.in = TRUE, cos.norm.out = TRUE, subset.row = HVG)
set.seed(111)
tsne <- Rtsne(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,],
corrected$corrected[[3]][HVG,],
corrected$corrected[[4]][HVG,],
corrected$corrected[[5]][HVG,])), perplexity = 50)
# Generate color vector
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
set.seed(123456)
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,25)]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,25)]
ggplot(data = data.frame(
tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
celltype = factor(c(as.character(cluster.C1$groups), cluster.Tc0_young$OrderByPT,
cluster.Tc1_young$OrderByPT, cluster.Tc0_old$OrderByPT,
cluster.Tc1_old$OrderByPT), levels = c(1:21, "Spermatogonia 1",
"Spermatogonia 2", "Spermatocytes 1",
"Spermatocytes 2", "Spermatids")))) +
geom_point(aes(tsne1, tsne2, colour = celltype)) +
scale_color_manual(values = col_vector) + theme_minimal()
# MNN correct
corrected <- mnnCorrect(log(as.matrix(C1.all[genes,] + 1)),
log(as.matrix(Tc0_young[genes,] + 1)),
log(as.matrix(Tc1_young[genes,] + 1)),
log(as.matrix(Tc0_old[genes,] + 1)),
log(as.matrix(Tc1_old[genes,] + 1)),
cos.norm.in = TRUE, cos.norm.out = TRUE, subset.row = HVG,
alpha = 0.1)
# MNN correct
corrected <- mnnCorrect(log(as.matrix(C1.all[genes,] + 1)),
log(as.matrix(Tc0_young[genes,] + 1)),
log(as.matrix(Tc1_young[genes,] + 1)),
log(as.matrix(Tc0_old[genes,] + 1)),
log(as.matrix(Tc1_old[genes,] + 1)),
cos.norm.in = TRUE, cos.norm.out = TRUE, subset.row = HVG,
sigma = 0.1)
# All data together
set.seed(111)
tsne <- Rtsne(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,],
corrected$corrected[[3]][HVG,],
corrected$corrected[[4]][HVG,],
corrected$corrected[[5]][HVG,])), perplexity = 50)
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
set.seed(123456)
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,25)]
ggplot(data = data.frame(
tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
celltype = factor(c(as.character(cluster.C1$groups), cluster.Tc0_young$OrderByPT,
cluster.Tc1_young$OrderByPT, cluster.Tc0_old$OrderByPT,
cluster.Tc1_old$OrderByPT), levels = c(1:21, "Spermatogonia 1",
"Spermatogonia 2", "Spermatocytes 1",
"Spermatocytes 2", "Spermatids")))) +
geom_point(aes(tsne1, tsne2, colour = celltype)) +
scale_color_manual(values = col_vector) + theme_minimal()
tsne <- Rtsne(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,],
corrected$corrected[[3]][HVG,],
corrected$corrected[[4]][HVG,],
corrected$corrected[[5]][HVG,])), perplexity = 80)
ggplot(data = data.frame(
tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
celltype = factor(c(as.character(cluster.C1$groups), cluster.Tc0_young$OrderByPT,
cluster.Tc1_young$OrderByPT, cluster.Tc0_old$OrderByPT,
cluster.Tc1_old$OrderByPT), levels = c(1:21, "Spermatogonia 1",
"Spermatogonia 2", "Spermatocytes 1",
"Spermatocytes 2", "Spermatids")))) +
geom_point(aes(tsne1, tsne2, colour = celltype)) +
scale_color_manual(values = col_vector) + theme_minimal()
# All data together
set.seed(1234)
tsne <- Rtsne(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,],
corrected$corrected[[3]][HVG,],
corrected$corrected[[4]][HVG,],
corrected$corrected[[5]][HVG,])), perplexity = 80)
ggplot(data = data.frame(
tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
celltype = factor(c(as.character(cluster.C1$groups), cluster.Tc0_young$OrderByPT,
cluster.Tc1_young$OrderByPT, cluster.Tc0_old$OrderByPT,
cluster.Tc1_old$OrderByPT), levels = c(1:21, "Spermatogonia 1",
"Spermatogonia 2", "Spermatocytes 1",
"Spermatocytes 2", "Spermatids")))) +
geom_point(aes(tsne1, tsne2, colour = celltype)) +
scale_color_manual(values = col_vector) + theme_minimal()
# All data together
set.seed(1234)
tsne <- Rtsne(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,],
corrected$corrected[[3]][HVG,],
corrected$corrected[[4]][HVG,],
corrected$corrected[[5]][HVG,])), perplexity = 50)
ggplot(data = data.frame(
tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
celltype = factor(c(as.character(cluster.C1$groups), cluster.Tc0_young$OrderByPT,
cluster.Tc1_young$OrderByPT, cluster.Tc0_old$OrderByPT,
cluster.Tc1_old$OrderByPT), levels = c(1:21, "Spermatogonia 1",
"Spermatogonia 2", "Spermatocytes 1",
"Spermatocytes 2", "Spermatids")))) +
geom_point(aes(tsne1, tsne2, colour = celltype)) +
scale_color_manual(values = col_vector) + theme_minimal()
# All data together
set.seed(1234)
tsne <- Rtsne(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,],
corrected$corrected[[3]][HVG,],
corrected$corrected[[4]][HVG,],
corrected$corrected[[5]][HVG,])))
ggplot(data = data.frame(
tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
celltype = factor(c(as.character(cluster.C1$groups), cluster.Tc0_young$OrderByPT,
cluster.Tc1_young$OrderByPT, cluster.Tc0_old$OrderByPT,
cluster.Tc1_old$OrderByPT), levels = c(1:21, "Spermatogonia 1",
"Spermatogonia 2", "Spermatocytes 1",
"Spermatocytes 2", "Spermatids")))) +
geom_point(aes(tsne1, tsne2, colour = celltype)) +
scale_color_manual(values = col_vector) + theme_minimal()
# All data together
knitr::opts_chunk$set(echo = TRUE)
set.seed(1234)
tsne <- Rtsne(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,],
corrected$corrected[[3]][HVG,],
corrected$corrected[[4]][HVG,],
corrected$corrected[[5]][HVG,])), perplexity = 50)
library(Rtsne)
set.seed(1234)
tsne <- Rtsne(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,],
corrected$corrected[[3]][HVG,],
corrected$corrected[[4]][HVG,],
corrected$corrected[[5]][HVG,])), perplexity = 50)
ggplot(data = data.frame(
tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
celltype = factor(c(as.character(cluster.C1$groups), cluster.Tc0_young$OrderByPT,
cluster.Tc1_young$OrderByPT, cluster.Tc0_old$OrderByPT,
cluster.Tc1_old$OrderByPT), levels = c(1:21, "Spermatogonia 1",
"Spermatogonia 2", "Spermatocytes 1",
"Spermatocytes 2", "Spermatids")))) +
geom_point(aes(tsne1, tsne2, colour = celltype)) +
scale_color_manual(values = col_vector) + theme_minimal()
library(ggplot2)
ggplot(data = data.frame(
tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
celltype = factor(c(as.character(cluster.C1$groups), cluster.Tc0_young$OrderByPT,
cluster.Tc1_young$OrderByPT, cluster.Tc0_old$OrderByPT,
cluster.Tc1_old$OrderByPT), levels = c(1:21, "Spermatogonia 1",
"Spermatogonia 2", "Spermatocytes 1",
"Spermatocytes 2", "Spermatids")))) +
geom_point(aes(tsne1, tsne2, colour = celltype)) +
scale_color_manual(values = col_vector) + theme_minimal()
ggplot(data = data.frame(
tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
gene = log10(as.numeric(cur_data["Prm1",]) + 1))) +
geom_point(aes(tsne1, tsne2, colour = gene)) +
scale_color_gradient2() + theme_minimal()
chr21.genes <- rownames(C1.all)[1:348]
cur_genes <- c(genes, chr21.genes)
cur_data <- cbind(as.data.frame(as.matrix(C1.all))[cur_genes,],
as.data.frame(as.matrix(Tc0_young))[cur_genes,],
as.data.frame(as.matrix(Tc1_young))[cur_genes,],
as.data.frame(as.matrix(Tc0_old))[cur_genes,],
as.data.frame(as.matrix(Tc1_old))[cur_genes,])
cur_data[is.na(cur_data)] <- 0
saveRDS(cur_data,
"../data/10X_data/All.rds")
saveRDS(tsne, "../10X/Results/tsne_All.rds")
df <- data.frame(row.names = c(colnames(C1.all), colnames(Tc0_young),
colnames(Tc1_young), colnames(Tc0_old),
colnames(Tc1_old)),
cluster = factor(c(as.character(cluster.C1$groups), cluster.Tc0_young$OrderByPT,
cluster.Tc1_young$OrderByPT, cluster.Tc0_old$OrderByPT,
cluster.Tc1_old$OrderByPT), levels = c(1:21, "Spermatogonia 1",
"Spermatogonia 2", "Spermatocytes 1",
"Spermatocytes 2", "Spermatids")))
write.csv(df, "../10X/Results/Clusters_All.csv")
cur_10X_cells <- as.matrix(cbind(Tc0_young[genes,which(!is.na(match(cluster.Tc0_young$OrderByPT, 1:3))) ],
Tc1_young[genes,which(!is.na(match(cluster.Tc1_young$OrderByPT, 1:3))) ],
Tc0_old[genes,which(!is.na(match(cluster.Tc0_old$OrderByPT, 1:3))) ],
Tc1_old[genes,which(!is.na(match(cluster.Tc1_old$OrderByPT, 1:3))) ]))
cur_10X_cluster <- rbind(cluster.Tc0_young[which(!is.na(match(cluster.Tc0_young$OrderByPT, 1:3))),c(1,4)],
cluster.Tc1_young[which(!is.na(match(cluster.Tc1_young$OrderByPT, 1:3))),],
cluster.Tc0_old[which(!is.na(match(cluster.Tc0_old$OrderByPT, 1:3))),],
cluster.Tc1_old[which(!is.na(match(cluster.Tc1_old$OrderByPT, 1:3))),])
cur_C1_cells <- C1.all[,grepl("Stem", colnames(C1.all))]
cur_C1_cluster <- cluster.C1[grepl("Stem", cluster.C1$X),]
genes <- intersect(rownames(cur_10X_cells),
rownames(cur_C1_cells))
# Bring C1 and 10X data to same scale
HVG.C1 <- trendVar(log2(as.matrix(cur_C1_cells[genes,]) + 1))
suppressMessages(library(scran))
library(ggplot2)
library(Rtsne)
library(RColorBrewer)
# Bring C1 and 10X data to same scale
HVG.C1 <- trendVar(log2(as.matrix(cur_C1_cells[genes,]) + 1))
HVG.C1.1 <- decomposeVar(log2(as.matrix(C1.all[genes,]) + 1),
HVG.C1)
HVG.C1.1 <- decomposeVar(log2(as.matrix(cur_C1_cells[genes,]) + 1),
HVG.C1)
HVG.10X <- trendVar(log2(as.matrix(cur_10X_cells[genes,]) + 1))
HVG.10X.1 <- decomposeVar(log2(as.matrix(cur_10X_cells[genes,]) + 1),
HVG.10X)
HVG.df <- combineVar(HVG.C1.1, HVG.10X.1)
HVG.df <- HVG.df[order(HVG.df$bio, decreasing = TRUE),]
HVG <- rownames(HVG.df)[1:1000]
# MNN correct
corrected <- mnnCorrect(log(as.matrix(cur_C1_cells[genes,] + 1)),
log(as.matrix(cur_10X_cells[genes,] + 1)),
cos.norm.in = TRUE, cos.norm.out = TRUE, subset.row = HVG)
# All data together
pca <- prcomp(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,])))
# Generate color vector
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
set.seed(123456)
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,25)]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,25)]
cols <- col_vector[c(1,2,3,21,22)]
ggplot(data = data.frame(
PC1 = pca$x[,1], PC2 = pca$x[,2],
celltype = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c(1:3, "Spermatogonia 1", "Spermatogonia 2")))) +
geom_point(aes(PC1, PC2, colour = celltype)) +
scale_color_manual(values = cols) + theme_minimal()
# Generate color vector
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
set.seed(123456)
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,26)]
cols <- col_vector[c(1,2,3,21,22)]
ggplot(data = data.frame(
PC1 = pca$x[,1], PC2 = pca$x[,2],
celltype = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c(1:3, "Spermatogonia 1", "Spermatogonia 2")))) +
geom_point(aes(PC1, PC2, colour = celltype)) +
scale_color_manual(values = cols) + theme_minimal()
# Generate color vector
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
set.seed(123456)
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,25)]
cols <- col_vector[c(1,2,3,21,22)]
ggplot(data = data.frame(
PC1 = pca$x[,1], PC2 = pca$x[,2],
celltype = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c(1:3, "Spermatogonia 1", "Spermatogonia 2")))) +
geom_point(aes(PC1, PC2, colour = celltype)) +
scale_color_manual(values = cols) + theme_minimal()
chr21.genes <- rownames(cur_C1_cells)[1:348]
cur_genes <- c(genes, chr21.genes)
cur_data <- cbind(as.data.frame(as.matrix(C1.all))[cur_genes,colnames(cur_C1_cells)],
as.data.frame(as.matrix(Tc0_young))[cur_genes,which(!is.na(match(cluster.Tc0_young$OrderByPT, 1:3))) ],
as.data.frame(as.matrix(Tc1_young))[cur_genes,which(!is.na(match(cluster.Tc1_young$OrderByPT, 1:3))) ],
as.data.frame(as.matrix(Tc0_old))[cur_genes,which(!is.na(match(cluster.Tc0_old$OrderByPT, 1:3))) ],
as.data.frame(as.matrix(Tc1_old))[cur_genes,which(!is.na(match(cluster.Tc1_old$OrderByPT, 1:3))) ])
cur_data[is.na(cur_data)] <- 0
saveRDS(cur_data,
"../data/10X_data/SpermatogoniaAll.rds")
saveRDS(pca, "../10X/Results/pca_SpermatogoniaAll.rds")
df <- data.frame(row.names = c(as.character(cur_C1_cluster$X), as.character(cur_10X_cluster$X)),
cluster = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c(1:3, "Spermatogonia 1", "Spermatogonia 2")))
write.csv(df, "../10X/Results/Clusters_SpermatogoniaAll.csv")
cur_10X_cells <- as.matrix(cbind(Tc0_young[genes,which(!is.na(match(cluster.Tc0_young$OrderByPT, 4:7))) ],
Tc1_young[genes,which(!is.na(match(cluster.Tc1_young$OrderByPT, 4:7))) ],
Tc0_old[genes,which(!is.na(match(cluster.Tc0_old$OrderByPT, 4:7))) ],
Tc1_old[genes,which(!is.na(match(cluster.Tc1_old$OrderByPT, 4:7))) ]))
cur_10X_cluster <- rbind(cluster.Tc0_young[which(!is.na(match(cluster.Tc0_young$OrderByPT, 4:7))),c(1,4)],
cluster.Tc1_young[which(!is.na(match(cluster.Tc1_young$OrderByPT, 4:7))),],
cluster.Tc0_old[which(!is.na(match(cluster.Tc0_old$OrderByPT, 4:7))),],
cluster.Tc1_old[which(!is.na(match(cluster.Tc1_old$OrderByPT, 4:7))),])
cur_C1_cells <- C1.all[,grepl("Spermatocytes", cluster.C1$groups)]
cur_C1_cluster <- cluster.C1[grepl("Spermatocytes", cluster.C1$groups),]
# Map cells
genes <- intersect(rownames(cur_10X_cells),
rownames(cur_C1_cells))
# Bring C1 and 10X data to same scale
HVG.C1 <- trendVar(log2(as.matrix(cur_C1_cells[genes,]) + 1))
# Bring C1 and 10X data to same scale
HVG.C1 <- trendVar(log2(as.matrix(cur_C1_cells[genes,]) + 1))
HVG.C1.1 <- decomposeVar(log2(as.matrix(cur_C1_cells[genes,]) + 1),
HVG.C1)
HVG.10X <- trendVar(log2(as.matrix(cur_10X_cells[genes,]) + 1))
HVG.10X <- trendVar(log2(as.matrix(cur_10X_cells[genes,]) + 1))
HVG.10X.1 <- decomposeVar(log2(as.matrix(cur_10X_cells[genes,]) + 1),
HVG.10X)
HVG.df <- combineVar(HVG.C1.1, HVG.10X.1)
HVG.df <- combineVar(HVG.C1.1, HVG.10X.1)
HVG.df <- HVG.df[order(HVG.df$bio, decreasing = TRUE),]
# MNN correct
corrected <- mnnCorrect(log(as.matrix(cur_C1_cells[genes,] + 1)),
log(as.matrix(cur_10X_cells[genes,] + 1)),
cos.norm.in = TRUE, cos.norm.out = TRUE, subset.row = HVG)
# All data together
pca <- prcomp(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,])))
# Generate color vector
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
set.seed(123456)
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,26)]
cols <- col_vector[c(4,5,6,7,24,25)]
# Generate color vector
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
set.seed(123456)
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,26)]
cols <- col_vector[c(4,5,6,7,23,24)]
ggplot(data = data.frame(
PC1 = pca$x[,1], PC2 = pca$x[,2],
celltype = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c(4:7, "Spermatocytes 1", "Spermatocytes 2")))) +
geom_point(aes(PC1, PC2, colour = celltype)) +
scale_color_manual(values = cols) + theme_minimal()
chr21.genes <- rownames(cur_C1_cells)[1:348]
cur_genes <- c(genes, chr21.genes)
cur_data <- cbind(as.data.frame(as.matrix(C1.all))[cur_genes,colnames(cur_C1_cells)],
as.data.frame(as.matrix(Tc0_young))[cur_genes,which(!is.na(match(cluster.Tc0_young$OrderByPT, 4:7))) ],
as.data.frame(as.matrix(Tc1_young))[cur_genes,which(!is.na(match(cluster.Tc1_young$OrderByPT, 4:7))) ],
as.data.frame(as.matrix(Tc0_old))[cur_genes,which(!is.na(match(cluster.Tc0_old$OrderByPT, 4:7))) ],
as.data.frame(as.matrix(Tc1_old))[cur_genes,which(!is.na(match(cluster.Tc1_old$OrderByPT, 4:7))) ])
cur_data <- cbind(as.data.frame(as.matrix(C1.all))[cur_genes,colnames(cur_C1_cells)],
as.data.frame(as.matrix(Tc0_young))[cur_genes,which(!is.na(match(cluster.Tc0_young$OrderByPT, 4:7))) ],
as.data.frame(as.matrix(Tc1_young))[cur_genes,which(!is.na(match(cluster.Tc1_young$OrderByPT, 4:7))) ],
as.data.frame(as.matrix(Tc0_old))[cur_genes,which(!is.na(match(cluster.Tc0_old$OrderByPT, 4:7))) ],
as.data.frame(as.matrix(Tc1_old))[cur_genes,which(!is.na(match(cluster.Tc1_old$OrderByPT, 4:7))) ])
cur_data[is.na(cur_data)] <- 0
saveRDS(cur_data,
"../data/10X_data/SpermatocytesAll.rds")
saveRDS(pca, "../10X/Results/pca_SpermatocytesAll.rds")
df <- data.frame(row.names = c(as.character(cur_C1_cluster$X), as.character(cur_10X_cluster$X)),
cluster = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c(4:7, "Spermatocytes 1", "Spermatocytes 2")))
write.csv(df, "../10X/Results/Clusters_SpermatocytesAll.csv")
cur_10X_cells <- as.matrix(cbind(Tc0_young[genes,which(!is.na(match(cluster.Tc0_young$OrderByPT, 8:20))) ],
Tc1_young[genes,which(!is.na(match(cluster.Tc1_young$OrderByPT, 8:20))) ],
Tc0_old[genes,which(!is.na(match(cluster.Tc0_old$OrderByPT, 8:20)))],
Tc1_old[genes,which(!is.na(match(cluster.Tc1_old$OrderByPT, 8:20))) ]))
cur_10X_cluster <- rbind(cluster.Tc0_young[which(!is.na(match(cluster.Tc0_young$OrderByPT, 8:20))),c(1,4)],
cluster.Tc1_young[which(!is.na(match(cluster.Tc1_young$OrderByPT, 8:20))),],
cluster.Tc0_old[which(!is.na(match(cluster.Tc0_old$OrderByPT, 8:20))),],
cluster.Tc1_old[which(!is.na(match(cluster.Tc1_old$OrderByPT, 8:20))),])
cur_C1_cells <- C1.all[,grepl("Spermatids", cluster.C1$groups)]
cur_C1_cluster <- cluster.C1[grepl("Spermatids", cluster.C1$groups),]
# Map cells
genes <- intersect(rownames(cur_10X_cells),
rownames(cur_C1_cells))
# Bring C1 and 10X data to same scale
HVG.C1 <- trendVar(log2(as.matrix(cur_C1_cells[genes,]) + 1))
HVG.C1.1 <- decomposeVar(log2(as.matrix(cur_C1_cells[genes,]) + 1),
HVG.C1)
HVG.10X <- trendVar(log2(as.matrix(cur_10X_cells[genes,]) + 1))
HVG.10X <- trendVar(log2(as.matrix(cur_10X_cells[genes,]) + 1))
HVG.10X.1 <- decomposeVar(log2(as.matrix(cur_10X_cells[genes,]) + 1),
HVG.10X)
HVG.df <- combineVar(HVG.C1.1, HVG.10X.1)
HVG.df <- HVG.df[order(HVG.df$bio, decreasing = TRUE),]
HVG <- rownames(HVG.df)[1:1000]
# MNN correct
corrected <- mnnCorrect(log(as.matrix(cur_C1_cells[genes,] + 1)),
log(as.matrix(cur_10X_cells[genes,] + 1)),
cos.norm.in = TRUE, cos.norm.out = TRUE, subset.row = HVG)
# All data together
pca <- prcomp(t(cbind(corrected$corrected[[1]][HVG,],
corrected$corrected[[2]][HVG,])))
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
set.seed(123456)
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))[sample(1:74,25)]
cols <- col_vector[c(8:20,26)]
ggplot(data = data.frame(
PC1 = pca$x[,1], PC2 = pca$x[,2],
celltype = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c(8:21, "Spermatids")))) +
geom_point(aes(PC1, PC2, colour = celltype)) +
scale_color_manual(values = cols) + theme_minimal()
cols <- col_vector[c(8:20,25)]
ggplot(data = data.frame(
PC1 = pca$x[,1], PC2 = pca$x[,2],
celltype = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c(8:21, "Spermatids")))) +
geom_point(aes(PC1, PC2, colour = celltype)) +
scale_color_manual(values = cols) + theme_minimal()
cols <- col_vector[c(25, 8:20)]
ggplot(data = data.frame(
PC1 = pca$x[,1], PC2 = pca$x[,2],
celltype = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c("Spermatids", 8:21)))) +
geom_point(aes(PC1, PC2, colour = celltype)) +
scale_color_manual(values = cols) + theme_minimal()
chr21.genes <- rownames(cur_C1_cells)[1:348]
cur_genes <- c(genes, chr21.genes)
cur_data <- cbind(as.data.frame(as.matrix(C1.all))[cur_genes,colnames(cur_C1_cells)],
as.data.frame(as.matrix(Tc0_young))[cur_genes,which(!is.na(match(cluster.Tc0_young$OrderByPT, 8:21))) ],
as.data.frame(as.matrix(Tc1_young))[cur_genes,which(!is.na(match(cluster.Tc1_young$OrderByPT, 8:21))) ],
as.data.frame(as.matrix(Tc0_old))[cur_genes,which(!is.na(match(cluster.Tc0_old$OrderByPT, 8:21))) ],
as.data.frame(as.matrix(Tc1_old))[cur_genes,which(!is.na(match(cluster.Tc1_old$OrderByPT, 8:21))) ])
cur_data[is.na(cur_data)] <- 0
saveRDS(cur_data,
"../data/10X_data/SpermatidsAll.rds")
saveRDS(pca, "../10X/Results/pca_SpermatidsAll.rds")
df <- data.frame(row.names = c(as.character(cur_C1_cluster$X), as.character(cur_10X_cluster$X)),
cluster = factor(c(as.character(cur_C1_cluster$groups), as.character(cur_10X_cluster$OrderByPT)),
levels = c(8:21, "Spermatids")))
write.csv(df, "../10X/Results/Clusters_SpermatidsAll.csv")
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(scran))
suppressMessages(library(scater))
library(SingleCellExperiment)
library(Rtsne)
library(Matrix)
# Read in data
sce <- readRDS("../data/10X_data/SCE_all.rds")
sce.P10 <- readRDS("../data/10X_data/SCE_P10.rds")
sce.juvenile <- readRDS("../data/10X_data/SCE_juvenile.rds")
# Separate the datasets
sce.B6 <- sce[,grepl("B6", colData(sce)$Sample)]
sce.B6 <- normalize(sce.B6)
sce.B6 <- normalize(sce.B6)
sce.P20 <- sce.juvenile[,grepl("P20_do17824", colData(sce.juvenile)$Sample)]
sce.juvenile
sce.juvenile <- readRDS("../data/10X_data/SCE_juvenile.rds")
sce.juvenile
knitr::opts_chunk$set(echo = TRUE)
library(slingshot)
library(slingshot)
library(cellAlign)
library(scater)
library(scater)
library(ggsci)
sce <- readRDS("../data/10X_data/SCE_all.rds")
sce <- readRDS("../../../../Dropbox (Cambridge University)/SST_spermatocytes/Analysis/data/10X_data/SCE_all.rds")
# Adult animals
sce.B6 <- sce[,grepl("B6", colData(sce)$Sample) & colData(sce)$Cluster != "1" &
colData(sce)$Cluster != "Outliers"]
sce.B6 <- normalize(sce.B6)
# Juvenile
sce.juvenile <- readRDS("../../../../Dropbox (Cambridge University)/SST_spermatocytes/Analysis/data/10X_data/SCE_juvenile.rds")
sce.P20 <- sce.juvenile[,grepl("P20", colData(sce.juvenile)$Sample) &
colData(sce.juvenile)$Cluster != "1" &
colData(sce.juvenile)$Cluster != "Outliers"]
sce.P20 <- normalize(sce.P20)
col_vector <- c(pal_material(palette = c("brown"),n = 10, reverse = FALSE)(10)[5],
pal_material(palette = c("brown"),n = 10, reverse = FALSE)(10)[5],
pal_material(palette = c("green"),n = 10, reverse = FALSE)(10)[5],
pal_material(palette = c("deep-orange"),n = 5, reverse = FALSE)(5),
pal_material(palette = c("green"),n = 10, reverse = FALSE)(10)[5],
pal_material(palette = c("pink"),n = 4, reverse = FALSE)(4),
pal_material(palette = c("purple"),n = 4, reverse = TRUE)(4),
pal_material(palette = c("blue"),n = 4, reverse = FALSE)(4),
pal_material(palette = c("deep-purple"),n = 4, reverse = TRUE)(4),
pal_material(palette = c("indigo"),n = 5, reverse = FALSE)(5),
pal_material(palette = c("blue-grey"),n = 10, reverse = FALSE)(10)[10])
sce.B6 <- runTSNE(sce.B6)
sce.P20 <- runTSNE(sce.P20)
library(devtools)
install_github("shenorrLab/cellAlign")
install.packages("dtw")
install_github("shenorrLab/cellAlign")
library(cellAlign)
plot(rd, col = col_vector[as.character(colData(sce.B6)$Cluster)], pch = 16, type = "p")
rd <- reducedDims(sce.B6)$TSNE
lin <- getLineages(rd, colData(sce.B6)$Cluster,  start.clus = "2", end.clus = "23")
crv.B6 <- getCurves(lin)
plot(rd, col = col_vector[as.character(colData(sce.B6)$Cluster)], pch = 16, type = "p")
rd
plot(rd)
plot(rd, col = col_vector[as.character(colData(sce.B6)$Cluster)], pch = 16, type = "p")
col_vector[as.character(colData(sce.B6)$Cluster)]
col_vector <- c(pal_material(palette = c("brown"),n = 10, reverse = FALSE)(10)[5],
pal_material(palette = c("brown"),n = 10, reverse = FALSE)(10)[5],
pal_material(palette = c("green"),n = 10, reverse = FALSE)(10)[5],
pal_material(palette = c("deep-orange"),n = 5, reverse = FALSE)(5),
pal_material(palette = c("green"),n = 10, reverse = FALSE)(10)[5],
pal_material(palette = c("pink"),n = 4, reverse = FALSE)(4),
pal_material(palette = c("purple"),n = 4, reverse = TRUE)(4),
pal_material(palette = c("blue"),n = 4, reverse = FALSE)(4),
pal_material(palette = c("deep-purple"),n = 4, reverse = TRUE)(4),
pal_material(palette = c("indigo"),n = 5, reverse = FALSE)(5),
pal_material(palette = c("blue-grey"),n = 10, reverse = FALSE)(10)[10])
names(col_vector) <- c(1, "P10_1", "P10_2", "P10_3", "P10_4", "P10_5", "P10_6", "P10_7", 2:23, "Outliers")
col_vector
plot(rd, col = col_vector[as.character(colData(sce.B6)$Cluster)], pch = 16, type = "p")
lines(crv.B6, lwd = 3)
sce.B6 <- runPCA(sce.B6)
sce.P20 <- runPCA(sce.P20)
# Use PCA as dim reduction
rd <- reducedDims(sce.B6)$PCA
lin <- getLineages(rd, colData(sce.B6)$Cluster,  start.clus = "2", end.clus = "23")
crv.B6 <- getCurves(lin)
plot(rd, col = col_vector[as.character(colData(sce.B6)$Cluster)], pch = 16, type = "p")
plot(rd, col = col_vector[as.character(colData(sce.B6)$Cluster)], pch = 16, type = "p")
lines(crv.B6, lwd = 3)
PT.B6 <- pseudotime(crv.B6)[,1]
rd <- reducedDims(sce.P20)$PCA
lin <- getLineages(rd, colData(sce.P20)$Cluster,  start.clus = "2", end.clus = "23")
colData(sce.P20)$Cluster
max(colData(sce.P20)$Cluster)
lin <- getLineages(rd, colData(sce.P20)$Cluster,  start.clus = "2", end.clus = "9")
crv.P20 <- getCurves(lin)
plot(rd, col = col_vector[as.character(colData(sce.P20)$Cluster)], pch = 16, type = "p")
lines(crv.P20, lwd = 3)
PT.P20 <- pseudotime(sce.P20)[,1]
PT.P20 <- pseudotime(crv.P20)[,1]
# Tc0 1 and 2
numPts = 200
?interWeights
interGlobalP20 = cellAlign::interWeights(expDataBatch = counts(sce.P20), trajCond = PT.P20,
winSz = 0.1, numPts = numPts)
